{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifsGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","result","json","data","gifs","map","img","id","title","images","downsized","GifsGridItem","className","src","alt","GifGrid","loading","estado","setEstado","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAiCeA,EA/BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAcrC,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAhBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,8BCNlBG,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,iDACmCC,UAAUH,GAD7C,+DAEGI,MAAMF,GAFT,cAEZG,EAFY,gBAGGA,EAAOC,OAHV,uBAGXC,EAHW,EAGXA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,UAAUZ,QARjB,kBAWXM,GAXW,4CAAF,sDCEPO,EAAe,SAAC,GAAsB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEtC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHX,SAACA,GAAc,IAAD,EACVd,mBAAS,CACjCqB,KAAK,GACLa,SAAQ,IAH0B,mBAC/BC,EAD+B,KACvBC,EADuB,KAetC,OATAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAU,CACNf,KAAMkB,EACNL,SAAQ,SAGrB,CAACpB,IACGqB,EDXyBK,CAAa1B,GAAhCa,EADsB,EAC3BN,KAAaa,EADc,EACdA,QACrB,OACG,qCACK,6BAAKpB,IACJoB,GAAW,qBAAKJ,UAAU,iBAAf,wBACZ,qBAAKA,UAAU,iCAAf,SACKH,EAAOJ,KAAK,SAAAC,GAAG,OACZ,wBAAC,EAAD,2BAAkBA,GAAlB,IAAuBiB,IAAKjB,EAAIC,eERvCiB,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,cAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAK9B,OACI,gCACI,8CACI,cAAC,EAAD,CAAaA,cAAeA,IAChC,uBACA,6BAEQ4C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAASA,SAAUA,GAAeA,Y,MCb1D8B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.0ac10586.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange = (e) =>{\r\n        setinputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategories(cats=> [ inputValue, ...cats]);\r\n            setinputValue('');\r\n        }\r\n      \r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n                \r\n            ></input>\r\n            {/* <button onClick={handleAdd} >Agregar</button> */}\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","export const getGifs =async(category)=>{\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=6WHcMaBdImRNjBDV6eEvzHVbz608xoN5`;\r\n    const result = await fetch(url);\r\n    const {data} = await result.json();\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized.url\r\n        }\r\n    })       \r\n    return gifs;\r\n} ","import React from 'react'\r\n\r\nexport const GifsGridItem = ( {id, title, url}) => {\r\n    //console.log({id, title, url});\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","// import React, { useState , useEffect} from 'react'\r\nimport React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifsGridItem } from './GifsGridItem';\r\n\r\nexport const GifGrid = ({category}) => {    \r\n    const { data:images, loading} = useFetchGifs(category);\r\n    return (\r\n       <>\r\n            <h3>{category}</h3>\r\n            {loading && <div className=\"animate__flash\">Loading...</div>}\r\n            <div className=\"card-grid animate__fadeOutDown\">\r\n                {images.map( img =>(\r\n                    <GifsGridItem {...img} key={img.id}/>\r\n                ))}               \r\n            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\nexport const useFetchGifs = (category) => {\r\n    const [estado, setEstado] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n            .then(imgs => {            \r\n                setEstado({\r\n                    data: imgs,\r\n                    loading:false\r\n                });                            \r\n            });\r\n    }, [category]);\r\n    return estado;\r\n}\r\n","import React, { useState } from 'react';\r\nimport  AddCategory  from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    \r\n    //console.log(categories)\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>            \r\n                <AddCategory setCategories={setCategories}/>\r\n            <hr />            \r\n            <ol>\r\n                {\r\n                    categories.map(category=> (     \r\n                        <GifGrid category={category} key={category} />\r\n                    ) )\r\n                }\r\n\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpertApp />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}